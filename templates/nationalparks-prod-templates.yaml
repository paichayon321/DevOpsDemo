apiVersion: v1
kind: Template
metadata:
  name: ${APPLICATION_NAME}-template
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_LABEL}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP_LABEL}
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_LABEL}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_LABEL}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_LABEL}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: MONGODB_SERVER_HOST
            valueFrom:
              configMapKeyRef:
                key: mongodb.server.host
                name: ${APPLICATION_NAME}
          - name: MONGODB_SERVER_PORT
            valueFrom:
              configMapKeyRef:
                key: mongodb.server.port
                name: ${APPLICATION_NAME}
          - name: MONGODB_USER
            valueFrom:
              configMapKeyRef:
                key: mongodb.user
                name: ${APPLICATION_NAME}
          - name: MONGODB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: mongodb.password
                name: ${APPLICATION_NAME}
          - name: MONGODB_DATABASE
            valueFrom:
              configMapKeyRef:
                key: mongodb.database
                name: ${APPLICATION_NAME}
          image: ${IMAGE_PROJECT_NAME}/${APPLICATION_NAME}:${IMAGE_NAME}-${IMAGE_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APPLICATION_NAME}
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
- apiVersion: v1
  data:
    mongodb.database: mongodb
    mongodb.password: mongodb
    mongodb.server.host: nationalparks-mongodb
    mongodb.server.port: "27017"
    mongodb.user: mongodb
  kind: ConfigMap
  metadata:
    name: ${APPLICATION_NAME}
parameters:
- description: The exposed route/host name
  displayName: The exposed route/host name
  name: HOST_NAME
  required: false
- description: Application Name
  displayName: Application Name
  name: APPLICATION_NAME
  value: nationalparks
  required: true
- description: Project Name where the image located
  displayName: Project Name where the image located
  name: IMAGE_PROJECT_NAME
  value: dev
  required: true
- description: Image Version
  displayName: Image Version
  name: IMAGE_VERSION
  value: "1.0.0"
  required: true
- description: Image Name
  displayName: Image Name
  name: IMAGE_NAME
  value: TestReady
  required: true
- description: Generic Application Label to group the apps
  displayName: Generic Application Label
  name: APP_LABEL
  value: nationalparks
  required: true
