apiVersion: v1
kind: Template
metadata:
  name: ${APPLICATION_NAME}-template
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
          - image: ${IMAGE_PROJECT_NAME}/${APPLICATION_NAME}:${IMAGE_NAME}-${IMAGE_VERSION}
            imagePullPolicy: IfNotPresent
            name: ${APPLICATION_NAME}
            resources: {}
            terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    runPolicy: Serial
    source:
      type: Binary
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:latest
          namespace: openshift
      type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      build: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec: {}
parameters:
- description: The exposed route/host name
  displayName: The exposed route/host name
  name: HOST_NAME
  required: false
- description: Application Name
  displayName: Application Name
  name: APPLICATION_NAME
  value: parksmap-web
  required: true
- description: Project Name where the image located
  displayName: Project Name where the image located
  name: IMAGE_PROJECT_NAME
  value: dev
  required: true
- description: Image Version
  displayName: Image Version
  name: IMAGE_VERSION
  value: "1.0.0"
  required: true
- description: Maven Mirror URL
  displayName: Maven Mirror URL
  name: MAVEN_MIRROR_URL
  value: http://nexus3-tools.ocp.demo.com/repository/maven-all-public
  required: true
- description: Image Name
  displayName: Image Name
  name: IMAGE_NAME
  value: DevelopmentReady
  required: true
