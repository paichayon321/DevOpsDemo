apiVersion: v1
kind: Template
metadata:
  name: ${APPLICATION_NAME}-template
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-mongodb
  spec:
    ports:
    - name: mongo
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: ${APPLICATION_NAME}-mongodb
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-mongodb
  spec:
    replicas: 1
    selector:
      name: ${APPLICATION_NAME}-mongodb
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}-mongodb
      spec:
        containers:
        - env:
          - name: MONGODB_USER
            value: ${MONGODB_USER}
          - name: MONGODB_PASSWORD
            value: ${MONGODB_PASSWORD}
          - name: MONGODB_ADMIN_PASSWORD
            value: ${MONGODB_ADMIN_PASSWORD}
          - name: MONGODB_DATABASE
            value: ${MONGODB_DATABASE}
          image: rhscl/mongodb-32-rhel7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: ${APPLICATION_NAME}-mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APPLICATION_NAME}-mongodb-data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-mongodb
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:${MONGODB_VERSION}
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-mongodb
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${MONGODB_VOLUME_CAPACITY}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name":"${APPLICATION_NAME}-mongodb","namespace":"","kind":"Service"}]'
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: MONGODB_SERVER_HOST
            valueFrom:
              configMapKeyRef:
                key: mongodb.server.host
                name: nationalparks
          - name: MONGODB_SERVER_PORT
            valueFrom:
              configMapKeyRef:
                key: mongodb.server.port
                name: nationalparks
          - name: MONGODB_USER
            valueFrom:
              configMapKeyRef:
                key: mongodb.user
                name: nationalparks
          - name: MONGODB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: mongodb.password
                name: nationalparks
          - name: MONGODB_DATABASE
            valueFrom:
              configMapKeyRef:
                key: mongodb.database
                name: nationalparks
          image: ${IMAGE_PROJECT_NAME}/${APPLICATION_NAME}:${IMAGE_NAME}-${IMAGE_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APPLICATION_NAME}
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
- apiVersion: v1
  data:
    mongodb.database: mongodb
    mongodb.password: mongodb
    mongodb.server.host: ${APPLICATION_NAME}-mongodb
    mongodb.server.port: "27017"
    mongodb.user: mongodb
  kind: ConfigMap
  metadata:
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    runPolicy: Serial
    source:
      type: Binary
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:latest
          namespace: openshift
      type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      build: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec: {}
parameters:
- description: The exposed route/host name
  displayName: The exposed route/host name
  name: HOST_NAME
  required: false
- description: Application Name
  displayName: Application Name
  name: APPLICATION_NAME
  value: nationalparks
  required: true
- description: Project Name where the image located
  displayName: Project Name where the image located
  name: IMAGE_PROJECT_NAME
  value: dev
  required: true
- description: Image Version
  displayName: Image Version
  name: IMAGE_VERSION
  value: "1.0.0"
  required: true
- description: Database Name
  displayName: Database Name
  name: MONGODB_DATABASE
  value: mongodb
  required: true
- description: Database User
  displayName: Database User
  name: MONGODB_USER
  value: mongodb
  required: true
- description: Database Password
  displayName: Database Password
  name: MONGODB_PASSWORD
  value: mongodb
  required: true
- description: Database Admin Password
  displayName: Database Admin Password
  name: MONGODB_ADMIN_PASSWORD
  value: mongodb
  required: true
- description: Mongodb Version
  displayName: Mongodb Version
  name: MONGODB_VERSION
  value: "3.2"
  required: true
- description: Mongodb Volume Capacity
  displayName: Mongodb Volume Capacity
  name: MONGODB_VOLUME_CAPACITY
  value: 5Gi
  required: true
- description: Maven Mirror URL
  displayName: Maven Mirror URL
  name: MAVEN_MIRROR_URL
  value: http://nexus3:8081/repository/maven-all-public
  required: true
- description: Image Name
  displayName: Image Name
  name: IMAGE_NAME
  value: DevelopmentReady
  required: true
